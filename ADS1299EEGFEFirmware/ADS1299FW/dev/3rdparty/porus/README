
=========================
PORUS: Portable USB Stack version 0.1.0
=========================

This is a portable USB device stack.  It is designed to contain, as far as possible, all of the code common to a complete USB device implementation.

PORUS is not finished.  Until version 1.0.0, the API may change, perhaps drastically.  It is not considered stable.

At this time, only one port is available.  It runs on the MMB0 DSP board, which uses the TMS320VC5507 DSP.  More ports are planned.

Documentation
-------------

At present, PORUS has no unified handbook.  The API is documented in formatted (for Doxygen) comments in the header files.

Better documentation and example code is planned for future releases.  Until these are available, contact the author <ashton_michael@ti.com> for assistance.

Contributions to the documentation (or any other part of PORUS) are solicited and welcomed.

Basic setup for a project
-------------------------

PORUS is distributed as source files, some of which are generated by usbgen.

To use PORUS, you need the following:

- On Windows, Cygwin is highly recommended.  See www.cygwin.com.  Cygwin provides a Unix-like shell environment.  From this you can easily run usbgen.

- Python, to run usbgen.  This is available for free for nearly all modern operating systems from www.python.org, and is also available as a Cygwin package.

To set up PORUS in your project:

1. Install usbgen.  See usbgen/INSTALL for instructions.  (The PORUS source code has no installation procedure; copy it into your project's source directory.)

2. Write a configuration file for usbgen.  This is most easily done by editing the example configuration file usbgen/example.usbconf.  It contains detailed comments.

3. In your project's directory, run usbgen on the configuration file you made.  This will generate usbconf.c and usbconf.h.

4. Choose a port.  If no port is available for your architecture, one will have to be written.  At this time, only one port is available.  It runs on the TMS320VC5509A and TMS320VC5507 DSPs using the inbuilt USB peripheral on those devices.

5. Copy the port source files to your project.

6. Edit portconf.h as necessary, using the comments as a guide.

7. Copy the core source files in src/ to your project.

Files
-----

The distribution contains the following:

doc/ - Documentation
port/ - Port files.  One directory per architecture
src/ - Source code and header files
test/ - A tester
usbgen/ - Code generator for static structures and enumeration code
NEWS - Version news
CHANGELOG - Detailed change log
README - This file
VERSION - Version number

About
-----

Written by Michael Ashton
(c) 2004-2006 TI Inc.

From WORDS by William Whitaker:

Word mod o/u         
An internal 'o' might be rendered by 'u'
pur.us               ADJ    1 1 NOM S M POS             
purus, pura -um, purior -or -us, purissimus -a -um  ADJ  
pure, clean, unsoiled; free from defilement/taboo/stain; blameless, innocent; chaste, unpolluted by sex; plain/unadulterated; genuine; absolute; refined; clear, limpid, free of mist/cloud; ringing (voice); open (land); net; simple;
